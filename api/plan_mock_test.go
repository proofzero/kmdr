// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/plan.go

// Package mock_api is a generated GoMock package.
package api

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPlanAPI is a mock of PlanAPI interface.
type MockPlanAPI struct {
	ctrl     *gomock.Controller
	recorder *MockPlanAPIMockRecorder
}

// MockPlanAPIMockRecorder is the mock recorder for MockPlanAPI.
type MockPlanAPIMockRecorder struct {
	mock *MockPlanAPI
}

// NewMockPlanAPI creates a new mock instance.
func NewMockPlanAPI(ctrl *gomock.Controller) *MockPlanAPI {
	mock := &MockPlanAPI{ctrl: ctrl}
	mock.recorder = &MockPlanAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlanAPI) EXPECT() *MockPlanAPIMockRecorder {
	return m.recorder
}

// Plan mocks base method.
func (m *MockPlanAPI) Plan(arg0 interface{}) ([]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Plan", arg0)
	ret0, _ := ret[0].([]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Plan indicates an expected call of Plan.
func (mr *MockPlanAPIMockRecorder) Plan(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Plan", reflect.TypeOf((*MockPlanAPI)(nil).Plan), arg0)
}
